{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Head","styled","div","Header","Wrapper","section","Image","img","Figure","errors","wrongLetters","length","path","src","WrongLettersWrapper","WrongLetters","map","letter","i","style","fontSize","reduce","prev","curr","WordWrapper","LetterWrapper","span","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","checkWin","correct","wrong","word","status","forEach","Container","PopupWrapper","Button","button","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","useEffect","display","onClick","NotificationWrapper","Notification","transform","margin","GameContainer","words","Math","floor","random","App","useState","setCorrectLetters","setWrongLetters","setShowNotification","handleKeydown","event","key","keyCode","toLowerCase","show","currentLetters","window","addEventListener","removeEventListener","className","rootElement","document","getElementById","ReactDOM","render"],"mappings":"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","file":"static/js/main.fdcec716.chunk.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Head = styled.div`\r\n  color: black;\r\n  text-align: center;\r\n  font-family: Orbitron;\r\n`;\r\n\r\nconst Header = () => {\r\n  return (\r\n    <>\r\n      <Head>\r\n        <h1>Hangman</h1>\r\n        <p>Enter a letter</p>\r\n      </Head>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Wrapper = styled.section`\r\n  background-color: aliceblue;\r\n`;\r\n\r\nconst Image = styled.img`\r\n  transform: scale(1.6, 1.1);\r\n  padding: 1rem;\r\n  width: 80vw;\r\n  height: 55vh;\r\n`;\r\n\r\nconst Figure = ({ wrongLetters }) => {\r\n  let errors = wrongLetters.length;\r\n  errors = errors <= 6 ? errors : (errors = 6);\r\n  const path = \"images/\" + errors + \".svg\";\r\n\r\n  return (\r\n    <>\r\n      <Wrapper>\r\n        <Image src={path} />\r\n      </Wrapper>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Figure;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WrongLettersWrapper = styled.div`\r\n  position: absolute;\r\n  top: 20px;\r\n  right: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: right;\r\n  font-size: 1rem;\r\n  font-family: Patrick Hand;\r\n`;\r\n\r\nconst WrongLetters = ({ wrongLetters }) => {\r\n  return (\r\n    <WrongLettersWrapper>\r\n      <div>\r\n        {wrongLetters.length > 0 && <p>Wrong Letters</p>}\r\n        {wrongLetters\r\n          .map((letter, i) => (\r\n            <span key={i} style={{ fontSize: \"24px\" }}>\r\n              {letter}\r\n            </span>\r\n          ))\r\n          .reduce(\r\n            (prev, curr) => (prev === null ? [curr] : [prev, \", \", curr]),\r\n            null\r\n          )}\r\n      </div>\r\n    </WrongLettersWrapper>\r\n  );\r\n};\r\n\r\nexport default WrongLetters;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst WordWrapper = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  font-family: Patrick Hand SC;\r\n`;\r\n\r\nconst LetterWrapper = styled.span`\r\n  border-bottom: 3px solid #2980b9;\r\n  display: inline-flex;\r\n  font-size: 30px;\r\n  align-items: center;\r\n  justify-content: center;\r\n  margin: 0 3px;\r\n  height: 50px;\r\n  width: 20px;\r\n`;\r\n\r\nconst Word = ({ selectedWord, correctLetters }) => {\r\n  return (\r\n    <WordWrapper>\r\n      {selectedWord.split(\"\").map((letter, i) => {\r\n        return (\r\n          <LetterWrapper key={i}>\r\n            {correctLetters.includes(letter) ? letter : \"\"}\r\n          </LetterWrapper>\r\n        );\r\n      })}\r\n    </WordWrapper>\r\n  );\r\n};\r\n\r\nexport default Word;\r\n","export function showNotification(setter) {\r\n  setter(true);\r\n  setTimeout(() => {\r\n    setter(false);\r\n  }, 2000);\r\n}\r\n\r\nexport function checkWin(correct, wrong, word) {\r\n  let status = \"win\";\r\n\r\n  // Check for win\r\n  word.split(\"\").forEach((letter) => {\r\n    if (!correct.includes(letter)) {\r\n      status = \"\";\r\n    }\r\n  });\r\n\r\n  // Check for lose\r\n  if (wrong.length === 6) status = \"lose\";\r\n\r\n  return status;\r\n}\r\n","import React, { useEffect } from \"react\";\r\nimport { checkWin } from \"../helpers/helpers\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  position: fixed;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  display: none;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\nconst PopupWrapper = styled.div`\r\n  background: #2980b9;\r\n  border-radius: 5px;\r\n  box-shadow: 0 15px 10px 3px rgba(0, 0, 0, 0.1);\r\n  padding: 20px;\r\n  text-align: center;\r\n  font-family: Patrick Hand;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  cursor: pointer;\r\n  background-color: #fff;\r\n  color: #2980b9;\r\n  border: 0;\r\n  margin-top: 20px;\r\n  padding: 12px 20px;\r\n  font-size: 16px;\r\n  font-family: Patrick Hand SC;\r\n`;\r\n\r\nconst Popup = ({\r\n  correctLetters,\r\n  wrongLetters,\r\n  selectedWord,\r\n  setPlayable,\r\n  playAgain\r\n}) => {\r\n  let finalMessage = \"\";\r\n  let finalMessageRevealWord = \"\";\r\n  let playable = true;\r\n\r\n  if (checkWin(correctLetters, wrongLetters, selectedWord) === \"win\") {\r\n    finalMessage = \"Congratulations! You won! ðŸ˜ƒ\";\r\n    playable = false;\r\n  } else if (checkWin(correctLetters, wrongLetters, selectedWord) === \"lose\") {\r\n    finalMessage = \"Unfortunately you lost. ðŸ˜•\";\r\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\r\n    playable = false;\r\n  }\r\n\r\n  useEffect(() => {\r\n    setPlayable(playable);\r\n  });\r\n\r\n  return (\r\n    <Container style={finalMessage !== \"\" ? { display: \"flex\" } : {}}>\r\n      <PopupWrapper>\r\n        <h2>{finalMessage}</h2>\r\n        <h3>{finalMessageRevealWord}</h3>\r\n        <Button onClick={playAgain}>Play Again</Button>\r\n      </PopupWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Popup;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nconst NotificationWrapper = styled.div`\r\n  color: white;\r\n  background-color: rgba(0, 0, 0, 0.3);\r\n  border-radius: 10px 10px 0 0;\r\n  padding: 15px 20px;\r\n  position: absolute;\r\n  bottom: -50px;\r\n  transition: transform 0.3s ease-in-out;\r\n`;\r\n\r\nconst Notification = ({ showNotification }) => {\r\n  return (\r\n    <NotificationWrapper\r\n      style={showNotification ? { transform: \"translateY(-50px)\" } : {}}\r\n    >\r\n      <p style={{ margin: 0 }}>You have already entered this letter</p>\r\n    </NotificationWrapper>\r\n  );\r\n};\r\n\r\nexport default Notification;\r\n","import \"./styles.css\";\nimport React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\nimport { showNotification as show, checkWin } from \"./helpers/helpers\";\nimport styled from \"styled-components\";\n\nconst GameContainer = styled.div`\n  position: relative;\n  margin: auto;\n`;\n\n// Random Word\nconst words = [\"application\", \"programming\", \"interface\", \"wizard\"];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nexport default function App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((currentLetters) => [...currentLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeydown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n\n    // Empty Arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n\n    const random = Math.floor(Math.random() * words.length);\n    selectedWord = words[random];\n  }\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <GameContainer>\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n      </GameContainer>\n      <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </div>\n  );\n}\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}